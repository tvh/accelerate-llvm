name:                   accelerate-llvm-native
version:                0.15.0.0
cabal-version:          >= 1.10
tested-with:            GHC == 7.6.*
build-type:             Simple

synopsis:               Accelerate backend generating LLVM
description:
    This library implements a backend for the /Accelerate/ language which
    generates LLVM-IR targeting multicore CPUs. For further information, refer
    to the main /Accelerate/ package:
    <http://hackage.haskell.org/package/accelerate>

license:                BSD3
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
bug-reports:            https://github.com/AccelerateHS/accelerate/issues
category:               Compilers/Interpreters, Concurrency, Data, Parallelism

extra-source-files:     include/accelerate.h


-- Configuration flags
-- -------------------

Flag debug
  Default:              True
  Description:
    Enable tracing message flags. These are read from the command-line
    arguments, which is convenient but may cause problems interacting with the
    user program, so is not enabled by default. The available options:
    .

Flag bounds-checks
  Default:              True
  Description:          Enable bounds checking

Flag unsafe-checks
  Default:              True
  Description:          Enable bounds checking in unsafe operations

Flag internal-checks
  Default:              True
  Description:          Enable internal consistency checks


-- Build configuration
-- -------------------

Library
  exposed-modules:
    Data.Array.Accelerate.LLVM.Native

    -- required for accelerate-llvm-multidev
    Data.Array.Accelerate.LLVM.Native.State
    Data.Array.Accelerate.LLVM.Native.Target
    Data.Array.Accelerate.LLVM.Native.Execute

  other-modules:
    Data.Array.Accelerate.LLVM.Native.Array.Data
    Data.Array.Accelerate.LLVM.Native.Debug

    Data.Array.Accelerate.LLVM.Native.Compile
    Data.Array.Accelerate.LLVM.Native.Compile.Function
    Data.Array.Accelerate.LLVM.Native.Compile.Link
    Data.Array.Accelerate.LLVM.Native.Compile.Optimise

    Data.Array.Accelerate.LLVM.Native.CodeGen
    Data.Array.Accelerate.LLVM.Native.CodeGen.Base
    Data.Array.Accelerate.LLVM.Native.CodeGen.Fold
    Data.Array.Accelerate.LLVM.Native.CodeGen.Generate
    Data.Array.Accelerate.LLVM.Native.CodeGen.Loop
    Data.Array.Accelerate.LLVM.Native.CodeGen.Map
    Data.Array.Accelerate.LLVM.Native.CodeGen.Permute
    Data.Array.Accelerate.LLVM.Native.CodeGen.Scan
    Data.Array.Accelerate.LLVM.Native.CodeGen.Stencil
    Data.Array.Accelerate.LLVM.Native.CodeGen.Transform

    Data.Array.Accelerate.LLVM.Native.Execute.Async
    Data.Array.Accelerate.LLVM.Native.Execute.Environment
    Data.Array.Accelerate.LLVM.Native.Execute.Fill
    Data.Array.Accelerate.LLVM.Native.Execute.Gang
    Data.Array.Accelerate.LLVM.Native.Execute.LBS
    Data.Array.Accelerate.LLVM.Native.Execute.Marshal

  build-depends:
          base                          >= 4.6 && <5.0
        , accelerate                    == 0.15.*
        , accelerate-llvm               == 0.15.*
        , containers                    >= 0.5 && <0.6
        , directory                     >= 1.0
        , dlist                         >= 0.6
        , fclabels                      >= 2.0
        , libffi                        >= 0.1
        , llvm-general                  >= 3.2
        , llvm-general-pure             >= 3.2
        , llvm-general-quote            >= 0.1
        , mtl                           >= 2.0
        , time                          >= 1.4

  default-language:
    Haskell2010

  include-dirs:                 include
  ghc-options:                  -O2 -Wall -fwarn-tabs -dcore-lint

  if flag(debug)
    cpp-options:                -DACCELERATE_DEBUG

  if flag(bounds-checks)
    cpp-options:                -DACCELERATE_BOUNDS_CHECKS

  if flag(unsafe-checks)
    cpp-options:                -DACCELERATE_UNSAFE_CHECKS

  if flag(internal-checks)
    cpp-options:                -DACCELERATE_INTERNAL_CHECKS


source-repository head
  type:                 git
  location:

-- vim: nospell
